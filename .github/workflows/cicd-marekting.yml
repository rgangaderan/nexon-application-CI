#####################################################
# Complete CICD process for Nexon Marketing app.
# The workflow has some secret stored in GHA Settings.
#####################################################
on:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - main    
      - dev
      - 'releases/**'
#############################################################################################
# Passing global environment variable, this can be use throughout the file 
env:
  ECR_REGION: us-east-1
  ECR_PROFILE: nexon-dev
#############################################################################################

jobs:

#Login to the ECR
  Docker-Login:
    runs-on: self-hosted
    name: DockerLogin
    defaults:
      run:
        shell: bash
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: "docker_login"
        run: |
            aws ecr get-login-password --region $ECR_REGION --profile $ECR_PROFILE | docker login --username AWS --password-stdin 126609036647.dkr.ecr.us-east-1.amazonaws.com

#Build the docker images, before building it will remove some old images 
  Build:
    runs-on: self-hosted
    name: Nexon Marketing Application Docker Build

    defaults:
      run:
        shell: bash
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: "build"
        run: |
            docker rmi -f $(docker images -q)
            docker build --no-cache -t nexon-marketing:$(cat version.sh | cut -c 9-) ./nexon-marketing-CI
    needs: [Docker-Login]

#Publish the docker images to ECR
  Push:
    runs-on: self-hosted
    name: Nexon Apllication Docker Push

    defaults:
      run:
        shell: bash
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: "push"
        run: |
            docker tag nexon-marketing:$(cat version.sh | cut -c 9-) 126609036647.dkr.ecr.us-east-1.amazonaws.com/nexon-development-zgqad:$(cat version.sh | cut -c 9-)
            docker push 126609036647.dkr.ecr.us-east-1.amazonaws.com/nexon-development-zgqad:$(cat version.sh | cut -c 9-)
    needs: [Build]

###############################################################################################################################################################################
#     Task Definition register
#     Task Definition will register with new image version using a bash script to cat the version number from version file in the root and append it as a variable in docker tag
###############################################################################################################################################################################

  Task-Definition:
    runs-on: self-hosted
    name: Register TaskDefinition
    environment:
      name: Dev
    defaults:
      run:
        shell: bash
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: "register-task-definition"
        run: |
            cd nexon-marketing-CD && sed -i s/"{{version}}"/$(cat ../version.sh | cut -c 9-)/g task-definition.json
            aws ecs register-task-definition --profile $ECR_PROFILE --region $ECR_REGION --cli-input-json file://task-definition.json
    needs: [Push]

##################################################################################################################################################################
#    Update ECS Service
#    Service update will be the last step, 1st it will update the service with 0 desired count to kill old running tasks and then update it again with new count.
##################################################################################################################################################################

  Update-Service:
    runs-on: self-hosted
    name: Update Service
    defaults:
      run:
        shell: bash
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        env:
          SERVICE: nexon-development-xqzpf
          TASKDEFINITION: nexon-development-task-definition-xqzpf
          COUNT: 2
          CLUSTER: nexon-development-ecs-cluster-xqzpf
        name: "Update-Service"
        run: |
            aws ecs update-service \
            --service $SERVICE \
            --task-definition $TASKDEFINITION \
            --desired-count 0 \
            --profile $ECR_PROFILE \
            --region $ECR_REGION \
            --cluster $CLUSTER

            sleep 100

            aws ecs update-service \
            --service $SERVICE \
            --task-definition $TASKDEFINITION \
            --desired-count $COUNT \
            --profile $ECR_PROFILE \
            --region $ECR_REGION \
            --cluster $CLUSTER

    needs: [Task-Definition]
